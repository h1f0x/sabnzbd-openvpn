#!/bin/bash
#
# Title:      SABnzbd + OpenVPN
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'sabnzbd-openvpn'
        intport: '9080'
        extport: '6013'
        image: 'h1f0x/sabnzbd-openvpn'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/coreapps/apps/_core.yml'

    - name: 'Including folders'
      include_tasks: '/opt/coreapps/apps/_downloaders.yml'

    - name: Create nzb folder
      file: 'path={{item}} state=directory mode=0775 owner=1000 group=1000'
      with_items:
        - '{{path.stdout}}/nzb'
        - '{{path.stdout}}/nzb/watch'

    - name: 'Including plugins'
      include_tasks: '/opt/coreapps/apps/_plugins.yml'

    - name: 'Checking for existing app data'
      stat:
        path: /opt/appdata/sabnzbd-openvpn/sabnzbd.ini
      register: inicheck

    # LABELS ######################################################################

    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}},{{tldset}}'
          traefik.frontend.auth.forward.address: '{{gauth}}'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/etc/localtime:/etc/localtime:ro'
          - '/opt/appdata/{{pgrole}}:/config'
          - '{{path.stdout}}:{{path.stdout}}'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'

    # MAIN DEPLOYMENT #############################################################

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'

    # CONFIGURATION ###########################################################
    - name: 'Waiting for {{pgrole}} to initialize'
      wait_for:
        path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
        state: present
        delay: 5

    - name: 'Stopping {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        state: stopped

    - name: Set download_dir when incomplete is undefined
      ini_file:
        path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
        section: misc
        option: download_dir
        value: '{{path.stdout}}/incomplete/{{pgrole}}'
        state: present

    - name: Set complete_dir
      ini_file:
        path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
        section: misc
        option: complete_dir
        value: '{{path.stdout}}/downloads/{{pgrole}}'
        state: present

    - name: Set nzb watch location
      ini_file:
        path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
        section: misc
        option: dirscan_dir
        value: '{{path.stdout}}/nzb/watch'
        state: present

    - name: Set nzb backup location
      ini_file:
        path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
        section: misc
        option: nzb_backup_dir
        value: '{{path.stdout}}/nzb'
        state: present

    - name: set script_dir
      ini_file:
        path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
        section: misc
        option: script_dir
        value: scripts
        state: present

    # FIRST TIME CONFIGURATION ###########################################################
    - name: 'Configuring {{pgrole}} for first time use'
      block:
        - name: Set host_whitelist
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: host_whitelist
            value: 'sabnzbd.{{domain.stdout}},'
            state: present

        - name: Set direct_unpack
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: direct_unpack
            value: 1
            state: present

        - name: Set ignore_samples
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: ignore_samples
            value: 1
            state: present

        - name: set unwanted_extensions
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: unwanted_extensions
            value: exe, com, bat, sh, iso, m2ts, mt2s
            state: present

        - name: set cleanup_list
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: cleanup_list
            value: nfo, exe, com, bat, txt, doc, xls, xlxs, docx, doc, jpg, jeg, gif, png
            state: present

        - name: set action_on_unwanted_extensions
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: action_on_unwanted_extensions
            value: 2
            state: present

        - name: set pause_on_pwrar - aborts encrypted rar rather than pausing
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: pause_on_pwrar
            value: 2
            state: present

        - name: set new_nzb_on_failure - try a new nzb if it fails
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: new_nzb_on_failure
            value: 1
            state: present

        - name: set flat_unpack
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: flat_unpack
            value: 1
            state: present

        - name: set download_free
          ini_file:
            path: '/opt/appdata/{{pgrole}}/sabnzbd/config.ini'
            section: misc
            option: download_free
            value: 25G
            state: present
      when: not inicheck.stat.exists

    - name: Restart {{pgrole}}
      docker_container:
        name: '{{pgrole}}'
        state: started